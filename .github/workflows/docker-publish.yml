name: Build and Push Docker Image

# This workflow runs automatically whenever you push code to the 'main' branch.
on:
  push:
    branches: [ "frontend-new-exp" ]

jobs:
  build-and-push:
    # The type of virtual machine to run the job on
    runs-on: self-hosted

    steps:
      # 1. Checks out your repository code so the workflow can access it
      - name: Check out the repo
        uses: actions/checkout@v4

      # 2. Sets up QEMU for multi-platform build support (good practice)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Sets up Docker Buildx, a modern builder that enables caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Logs into Docker Hub using the secrets we created earlier
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. This is the main step that builds and pushes the image.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # The location of your Dockerfile
          context: .
          # Tells the action to push the image to the registry after building
          push: true
          # Tags the image with 'latest' and also with the unique git commit SHA
          # Replace 'unmute-app' with your desired image name.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/unmute-app:latest,${{ secrets.DOCKERHUB_USERNAME }}/unmute-app:${{ github.sha }}
          # Enables build caching to speed up future runs
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tmpfs: /tmp